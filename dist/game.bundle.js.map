{"version":3,"file":"game.bundle.js","mappings":"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","sources":["webpack://git-repository/./src/js/game_screen.ts","webpack://git-repository/webpack/startup"],"sourcesContent":["const cardsField: HTMLElement | null = document.getElementById('cards-field')\r\nconst winWindow: HTMLElement | null = document.getElementById('win-window')\r\nconst looseWindow: HTMLElement | null = document.getElementById('loose-window')\r\nconst screenHeader: HTMLElement | null = document.getElementById('header')\r\nconst gameTimeMinutes: HTMLElement | null = document.getElementById('minutes')\r\nconst gameTimeSeconds: HTMLElement | null = document.getElementById('seconds')\r\n\r\nconst LEVEL_EASY = 'easy'\r\nconst LEVEL_MEDIUM = 'medium'\r\nconst LEVEL_HARD = 'hard'\r\n\r\nlet totalSeconds = 0\r\n\r\ninterface dataObject {\r\n    [key: string]: any\r\n}\r\n\r\nconst data: dataObject = {}\r\n\r\nconst cardData = [\r\n    { imgSrc: './static/img/cards/card_1.jpg', name: 'card_1' },\r\n    { imgSrc: './static/img/cards/card_2.jpg', name: 'card_2' },\r\n    { imgSrc: './static/img/cards/card_3.jpg', name: 'card_3' },\r\n    { imgSrc: './static/img/cards/card_4.jpg', name: 'card_4' },\r\n    { imgSrc: './static/img/cards/card_5.jpg', name: 'card_5' },\r\n    { imgSrc: './static/img/cards/card_6.jpg', name: 'card_6' },\r\n    { imgSrc: './static/img/cards/card_7.jpg', name: 'card_7' },\r\n    { imgSrc: './static/img/cards/card_8.jpg', name: 'card_8' },\r\n    { imgSrc: './static/img/cards/card_9.jpg', name: 'card_9' },\r\n    { imgSrc: './static/img/cards/card_10.jpg', name: 'card_10' },\r\n    { imgSrc: './static/img/cards/card_11.jpg', name: 'card_11' },\r\n    { imgSrc: './static/img/cards/card_12.jpg', name: 'card_12' },\r\n    { imgSrc: './static/img/cards/card_13.jpg', name: 'card_13' },\r\n    { imgSrc: './static/img/cards/card_14.jpg', name: 'card_14' },\r\n    { imgSrc: './static/img/cards/card_15.jpg', name: 'card_15' },\r\n    { imgSrc: './static/img/cards/card_16.jpg', name: 'card_16' },\r\n    { imgSrc: './static/img/cards/card_17.jpg', name: 'card_17' },\r\n    { imgSrc: './static/img/cards/card_18.jpg', name: 'card_18' },\r\n    { imgSrc: './static/img/cards/card_19.jpg', name: 'card_19' },\r\n    { imgSrc: './static/img/cards/card_20.jpg', name: 'card_20' },\r\n    { imgSrc: './static/img/cards/card_21.jpg', name: 'card_21' },\r\n    { imgSrc: './static/img/cards/card_22.jpg', name: 'card_22' },\r\n    { imgSrc: './static/img/cards/card_23.jpg', name: 'card_23' },\r\n    { imgSrc: './static/img/cards/card_24.jpg', name: 'card_24' },\r\n    { imgSrc: './static/img/cards/card_25.jpg', name: 'card_25' },\r\n    { imgSrc: './static/img/cards/card_26.jpg', name: 'card_26' },\r\n    { imgSrc: './static/img/cards/card_27.jpg', name: 'card_27' },\r\n    { imgSrc: './static/img/cards/card_28.jpg', name: 'card_28' },\r\n    { imgSrc: './static/img/cards/card_29.jpg', name: 'card_29' },\r\n    { imgSrc: './static/img/cards/card_30.jpg', name: 'card_30' },\r\n    { imgSrc: './static/img/cards/card_31.jpg', name: 'card_31' },\r\n    { imgSrc: './static/img/cards/card_32.jpg', name: 'card_32' },\r\n    { imgSrc: './static/img/cards/card_33.jpg', name: 'card_33' },\r\n    { imgSrc: './static/img/cards/card_34.jpg', name: 'card_34' },\r\n    { imgSrc: './static/img/cards/card_35.jpg', name: 'card_35' },\r\n    { imgSrc: './static/img/cards/card_36.jpg', name: 'card_36' },\r\n]\r\nconst cardCover = { imgSrc: './static/img/card-suit.jpg', name: 'back' }\r\n\r\nlet cardPairs: number\r\n\r\nfunction getLevelNumber() {\r\n    let level = localStorage.getItem('level')\r\n\r\n    if (level === LEVEL_EASY) {\r\n        cardPairs = 3\r\n    }\r\n    if (level === LEVEL_MEDIUM) {\r\n        cardPairs = 6\r\n    }\r\n    if (level === LEVEL_HARD) {\r\n        cardPairs = 9\r\n    }\r\n\r\n    return cardPairs\r\n}\r\n\r\nfunction getRandomCards(data: dataObject, toSliceNumber: number) {\r\n    data.sort(() => Math.random() - 0.5)\r\n\r\n    const newArray = data.slice(1, toSliceNumber.valueOf() + 1)\r\n    const duplicateArray = [...newArray]\r\n    const finalCardSetArray = newArray.concat(duplicateArray)\r\n\r\n    finalCardSetArray.sort(() => Math.random() - 0.5)\r\n\r\n    return finalCardSetArray\r\n}\r\n\r\n// export { getRandomCards }\r\n\r\nfunction checkCardsForMatch(event: Event) {\r\n    const clickedCard = event.target as Element\r\n\r\n    clickedCard?.classList.add('clicked')\r\n\r\n    const clickedCards = document.querySelectorAll<HTMLElement>('.clicked')\r\n    const flippedCards = document.querySelectorAll<HTMLElement>('.flipCard')\r\n\r\n    if (clickedCards.length === 2) {\r\n        if (\r\n            clickedCards[0].getAttribute('name') ===\r\n            clickedCards[1].getAttribute('name')\r\n        ) {\r\n            setTimeout(() => {\r\n                if (flippedCards.length === cardPairs * 2) {\r\n                    showPopupScreen(winWindow!)\r\n                }\r\n                console.log('score')\r\n            }, 1000)\r\n\r\n            clickedCards.forEach((card) => {\r\n                card.classList.remove('clicked')\r\n                card.style.pointerEvents = 'none'\r\n            })\r\n        } else {\r\n            setTimeout(() => {\r\n                showPopupScreen(looseWindow!)\r\n                console.log('loose')\r\n            }, 1000)\r\n        }\r\n    }\r\n}\r\n\r\nfunction showPopupScreen(screen: HTMLElement) {\r\n    screen.classList.remove('hidden')\r\n    if (screenHeader) screenHeader.style.opacity = '0.5'\r\n    if (cardsField) cardsField.style.opacity = '0.5'\r\n    stopTimer()\r\n}\r\n\r\nfunction showCardTimer(card: HTMLElement) {\r\n    card.style.pointerEvents = 'none'\r\n    card.classList.toggle('flipCard')\r\n\r\n    setTimeout(() => {\r\n        card.classList.toggle('flipCard')\r\n        card.style.pointerEvents = 'auto'\r\n    }, 4000)\r\n}\r\n\r\nfunction cardGenerator() {\r\n    const cards = getRandomCards(cardData, cardPairs)\r\n\r\n    cards.forEach((item: dataObject) => {\r\n        const card = document.createElement('div')\r\n        const cardFace = document.createElement('img')\r\n        const cardBack = document.createElement('img')\r\n\r\n        card.classList.add('card')\r\n        cardFace.classList.add('face')\r\n        cardBack.classList.add('back')\r\n\r\n        card.setAttribute('name', item.name)\r\n\r\n        cardsField?.appendChild(card)\r\n        card.appendChild(cardFace)\r\n        card.appendChild(cardBack)\r\n\r\n        cardFace.src = item.imgSrc\r\n        cardBack.src = cardCover.imgSrc\r\n\r\n        showCardTimer(card)\r\n\r\n        card.addEventListener('click', (event: MouseEvent) => {\r\n            card.classList.add('flipCard')\r\n\r\n            checkCardsForMatch(event)\r\n        })\r\n    })\r\n}\r\n\r\nfunction createCardBlock() {\r\n    getLevelNumber()\r\n\r\n    if (cardPairs === 9) {\r\n        cardsField?.classList.add('nine-pairs')\r\n    }\r\n    if (cardPairs === 6) {\r\n        cardsField?.classList.add('six-pairs')\r\n    } else if (cardPairs === 3) {\r\n        cardsField?.classList.add('three-pairs')\r\n    }\r\n\r\n    cardGenerator()\r\n}\r\n\r\nfunction timer() {\r\n    totalSeconds++\r\n\r\n    let minutes: number = Math.floor(totalSeconds / 60)\r\n    let seconds: number = totalSeconds % 60\r\n\r\n    if (seconds < 10) {\r\n        gameTimeSeconds!.textContent = `0${seconds}`\r\n        data.seconds = `0${seconds}`\r\n    } else {\r\n        gameTimeSeconds!.textContent = `${seconds}`\r\n        data.seconds = seconds\r\n    }\r\n\r\n    if (minutes < 10) {\r\n        gameTimeMinutes!.textContent = `0${minutes}`\r\n        data.minutes = `0${minutes}`\r\n    } else {\r\n        gameTimeMinutes!.textContent = `${minutes}`\r\n        data.minutes = minutes\r\n    }\r\n}\r\n\r\nfunction startTimer() {\r\n    let interval = setInterval(timer, 1000)\r\n    data.interval = interval\r\n}\r\n\r\nfunction stopTimer() {\r\n    const popUpTime = document.querySelectorAll('.popup__time')\r\n    popUpTime.forEach((time) => {\r\n        time.textContent = `${data.minutes}.${data.seconds}`\r\n    })\r\n\r\n    clearInterval(data.interval)\r\n}\r\n\r\ncreateCardBlock()\r\n\r\nsetTimeout(() => {\r\n    startTimer()\r\n}, 4000)\r\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[688]();\n"],"names":["cardPairs","level","cards","cardsField","document","getElementById","winWindow","looseWindow","screenHeader","gameTimeMinutes","gameTimeSeconds","totalSeconds","data","cardData","imgSrc","name","showPopupScreen","screen","classList","remove","style","opacity","querySelectorAll","forEach","time","textContent","minutes","seconds","clearInterval","interval","timer","Math","floor","localStorage","getItem","add","toSliceNumber","sort","random","newArray","slice","valueOf","duplicateArray","finalCardSetArray","concat","getRandomCards","item","card","createElement","cardFace","cardBack","setAttribute","appendChild","src","pointerEvents","toggle","setTimeout","showCardTimer","addEventListener","event","clickedCard","target","clickedCards","flippedCards","length","getAttribute","console","log","checkCardsForMatch","setInterval"],"sourceRoot":""}